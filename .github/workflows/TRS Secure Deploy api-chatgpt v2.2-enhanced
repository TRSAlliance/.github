name: TRS Secure Deploy api-chatgpt v2.2-enhanced

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  TRS_PROTOCOL_VERSION: '2.3.3'
  NODE_VERSION: '20'
  LOCKFILE_RETENTION_DAYS: 90
  TRS_LOGS_DIR: './trs-logs'
  TRS_SEALS_DIR: './trs-seals'
  TRS_REPORTS_DIR: './trs-reports'

jobs:
  integrity-verification:
    name: üõ°Ô∏è TRS Integrity Shield
    runs-on: ubuntu-latest
    outputs:
      verification-status: ${{ steps.verify.outputs.status }}
      breach-severity: ${{ steps.verify.outputs.severity }}
      trust-seal: ${{ steps.generate-seal.outputs.seal }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Ensure Lockfile Exists
        id: lockfile-check
        run: |
          if [ ! -f "package-lock.json" ]; then
            echo "Generating lockfile..."
            npm install --package-lock-only --no-audit
          fi
          echo "exists=true" >> $GITHUB_OUTPUT

      - name: Install Dependencies
        run: npm ci --omit=dev --no-audit

      - name: Run Integrity Check
        id: verify
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
          STEALTH_KEY: ${{ secrets.STEALTH_KEY }}
        run: |
          mkdir -p ${{ env.TRS_LOGS_DIR }}
          if [ -f scripts/trs-verify.js ]; then
            node scripts/trs-verify.js --level 3 \
              > ${{ env.TRS_LOGS_DIR }}/verification-results.json \
              2> ${{ env.TRS_LOGS_DIR }}/verify-errors.log
          else
            echo "::error::Verification script not found"
            exit 1
          fi

          STATUS=$(jq -r '.status' ${{ env.TRS_LOGS_DIR }}/verification-results.json)
          SEVERITY=$(jq -r '.severity' ${{ env.TRS_LOGS_DIR }}/verification-results.json)
          echo "status=$STATUS" >> $GITHUB_OUTPUT
          echo "severity=$SEVERITY" >> $GITHUB_OUTPUT

          if [ "$STATUS" != "CLEAN" ]; then
            echo "::error::Integrity check failed ‚Äì Severity: $SEVERITY"
            exit 1
          fi

      - name: Generate Trust Seal
        id: generate-seal
        if: steps.verify.outputs.status == 'CLEAN'
        env:
          STEALTH_KEY: ${{ secrets.STEALTH_KEY }}
        run: |
          mkdir -p ${{ env.TRS_SEALS_DIR }}
          if [ -f scripts/trs-seal.js ]; then
            SEAL=$(node scripts/trs-seal.js --commit ${{ github.sha }} --timestamp $(date +%s))
            echo "$SEAL" > ${{ env.TRS_SEALS_DIR }}/trust-seal.json
            echo "seal=$SEAL" >> $GITHUB_OUTPUT
          else
            echo "::error::Seal generation script missing"
            exit 1
          fi

  secure-deployment:
    name: üöÄ Deploy (If Verified)
    needs: integrity-verification
    if: needs.integrity-verification.outputs.verification-status == 'CLEAN'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Validate Seal
        env:
          STEALTH_KEY: ${{ secrets.STEALTH_KEY }}
        run: |
          if [ -f scripts/trs-validate-seal.js ]; then
            node scripts/trs-validate-seal.js \
              --seal '${{ needs.integrity-verification.outputs.trust-seal }}' \
              --commit ${{ github.sha }}
          else
            echo "::error::Seal validation script missing"
            exit 1
          fi

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v30
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_SCOPE }}
          working-directory: ./
          args: --prod --confirm --safe
        env:
          TRS_SEAL: ${{ needs.integrity-verification.outputs.trust-seal }}

  post-deploy:
    name: üìä Security Review
    needs: [integrity-verification, secure-deployment]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Generate Threat Report
        run: |
          mkdir -p ${{ env.TRS_REPORTS_DIR }}
          STATUS="${{ needs.integrity-verification.outputs.verification-status }}"
          SEAL="${{ needs.integrity-verification.outputs.trust-seal || 'NONE' }}"
          echo "Status: $STATUS" > ${{ env.TRS_REPORTS_DIR }}/summary.txt
          echo "Seal: $SEAL" >> ${{ env.TRS_REPORTS_DIR }}/summary.txt

          if [ -f scripts/trs-threat-assessment.js ]; then
            node scripts/trs-threat-assessment.js \
              --status "$STATUS" \
              --seal "$SEAL" \
              --output ${{ env.TRS_REPORTS_DIR }}/threat.md
          else
            echo "üü° Threat assessment script missing" >> ${{ env.TRS_REPORTS_DIR }}/threat.md
          fi

      - name: Upload Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: trs-report-${{ github.sha }}
          path: ${{ env.TRS_REPORTS_DIR }}/
          retention-days: 14

      - name: Optional Discord Summary
        if: always()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          STATUS="${{ needs.integrity-verification.outputs.verification-status }}"
          SEVERITY="${{ needs.integrity-verification.outputs.breach-severity || 'NONE' }}"
          curl -X POST "$DISCORD_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d '{
              "content": "üõ°Ô∏è **TRS Deploy Summary**\n- Status: '"$STATUS"'\n- Breach Severity: '"$SEVERITY"'"
            }'
