name: üõ°Ô∏è TRS System Deployment Protocol

on:
  workflow_dispatch:
    inputs:
      deployment_phase:
        description: 'DEPLOYMENT PHASE (init|build|secure|deploy)'
        required: true
      auth_token:
        description: '24-char TRS Sentinel Token'
        required: true

env:
  TRS_VERSION: '2.4.1'
  NODE_VERSION: '20'
  FIREBASE_PROJECT: 'trs-operator-live'
  NETLIFY_SITE_ID: 'trs-operator-protocol'

jobs:
  authenticate:
    name: üîí TRS Sentinel Authentication
    runs-on: ubuntu-latest
    outputs:
      auth_status: ${{ steps.verify.outputs.status }}
    steps:
      - name: Validate Quantum Token
        id: verify
        run: |
          if [[ "${{ github.event.inputs.auth_token }}" != "${{ secrets.TRS_QUANTUM_KEY }}" ]]; then
            echo "::error::TRS VIOLATION: Invalid Sentinel Token"
            echo "status=failed" >> $GITHUB_OUTPUT
            exit 137
          fi
          echo "status=verified" >> $GITHUB_OUTPUT

  infrastructure:
    name: üèóÔ∏è Team Alpha - Infrastructure
    needs: authenticate
    if: needs.authenticate.outputs.auth_status == 'verified' && github.event.inputs.deployment_phase == 'init'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'TRSAlliance/trs-operator-protocol'
          ssh-key: ${{ secrets.TRS_DEPLOY_KEY }}

      - name: Setup Netlify
        run: |
          npm install -g netlify-cli
          netlify sites:create --name ${{ env.NETLIFY_SITE_ID }}
          netlify deploy --prod --dir=build

      - name: Initialize Firebase
        run: |
          npm install -g firebase-tools
          firebase projects:create ${{ env.FIREBASE_PROJECT }}
          firebase apps:create web ${{ env.FIREBASE_PROJECT }}

  development:
    name: üíª Team Beta - Component Dev
    needs: authenticate
    if: needs.authenticate.outputs.auth_status == 'verified' && github.event.inputs.deployment_phase == 'build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'TRSAlliance/automation-impact-tracker'
          ssh-key: ${{ secrets.TRS_DEPLOY_KEY }}

      - name: Build Components
        run: |
          npm ci
          npm run build:operator
          npm run build:tracker

      - name: Generate Documentation
        run: |
          npx typedoc --out ./docs
          git add ./docs
          git commit -m "TRS Docs: Automated build $(date +%Y-%m-%d)"

  security:
    name: üõ°Ô∏è Team Gamma - Security
    needs: [authenticate, infrastructure, development]
    if: needs.authenticate.outputs.auth_status == 'verified' && github.event.inputs.deployment_phase == 'secure'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'TRSAlliance/trs-operator-protocol'
          ssh-key: ${{ secrets.TRS_DEPLOY_KEY }}

      - name: Security Audit
        run: |
          npm audit --production
          npx snyk test
          ./scripts/security-scan.sh

      - name: Deploy Security Rules
        run: |
          firebase deploy --only firestore:rules
          firebase deploy --only storage

  deploy:
    name: üöÄ Final Deployment
    needs: [authenticate, infrastructure, development, security]
    if: needs.authenticate.outputs.auth_status == 'verified' && github.event.inputs.deployment_phase == 'deploy'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'TRSAlliance/trs-operator-protocol'
          ssh-key: ${{ secrets.TRS_DEPLOY_KEY }}

      - name: Deploy to Netlify
        run: |
          netlify deploy --prod --dir=build

      - name: Deploy Firebase Functions
        run: |
          firebase deploy --only functions

      - name: Verify Deployment
        run: |
          curl -s https://${{ env.NETLIFY_SITE_ID }}.netlify.app/healthcheck | grep "TRS_OPERATIONAL"
